/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/cnrancher/cube-apiserver/k8s/pkg/apis/cube/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GroupMemberLister helps list GroupMembers.
type GroupMemberLister interface {
	// List lists all GroupMembers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.GroupMember, err error)
	// GroupMembers returns an object that can list and get GroupMembers.
	GroupMembers(namespace string) GroupMemberNamespaceLister
	GroupMemberListerExpansion
}

// groupMemberLister implements the GroupMemberLister interface.
type groupMemberLister struct {
	indexer cache.Indexer
}

// NewGroupMemberLister returns a new GroupMemberLister.
func NewGroupMemberLister(indexer cache.Indexer) GroupMemberLister {
	return &groupMemberLister{indexer: indexer}
}

// List lists all GroupMembers in the indexer.
func (s *groupMemberLister) List(selector labels.Selector) (ret []*v1alpha1.GroupMember, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GroupMember))
	})
	return ret, err
}

// GroupMembers returns an object that can list and get GroupMembers.
func (s *groupMemberLister) GroupMembers(namespace string) GroupMemberNamespaceLister {
	return groupMemberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GroupMemberNamespaceLister helps list and get GroupMembers.
type GroupMemberNamespaceLister interface {
	// List lists all GroupMembers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.GroupMember, err error)
	// Get retrieves the GroupMember from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.GroupMember, error)
	GroupMemberNamespaceListerExpansion
}

// groupMemberNamespaceLister implements the GroupMemberNamespaceLister
// interface.
type groupMemberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GroupMembers in the indexer for a given namespace.
func (s groupMemberNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GroupMember, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GroupMember))
	})
	return ret, err
}

// Get retrieves the GroupMember from the indexer for a given namespace and name.
func (s groupMemberNamespaceLister) Get(name string) (*v1alpha1.GroupMember, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("groupmember"), name)
	}
	return obj.(*v1alpha1.GroupMember), nil
}
